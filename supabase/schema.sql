-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.attendee_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  attendee_id uuid NOT NULL,
  event_id uuid NOT NULL,
  status character varying NOT NULL DEFAULT 'confirmed'::character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT attendee_events_pkey PRIMARY KEY (id),
  CONSTRAINT attendee_events_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES public.attendees(attendee_id),
  CONSTRAINT attendee_events_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(event_id)
);
CREATE TABLE public.attendees (
  attendee_id uuid NOT NULL DEFAULT gen_random_uuid(),
  registration_id uuid NOT NULL,
  attendee_type USER-DEFINED NOT NULL,
  dietary_requirements text,
  special_needs text,
  contact_preference USER-DEFINED NOT NULL,
  related_attendee_id uuid,
  relationship character varying,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  title text,
  first_name text,
  last_name text,
  suffix text,
  email text,
  phone text,
  is_primary boolean DEFAULT false,
  is_partner text,
  has_partner boolean DEFAULT false,
  contact_id uuid,
  CONSTRAINT attendees_pkey PRIMARY KEY (attendee_id),
  CONSTRAINT attendees_related_attendee_id_fkey FOREIGN KEY (related_attendee_id) REFERENCES public.attendees(attendee_id),
  CONSTRAINT attendees_registration_id_fkey FOREIGN KEY (registration_id) REFERENCES public.registrations(registration_id),
  CONSTRAINT attendees_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(contact_id)
);
CREATE TABLE public.connected_account_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  payment_intent_id text NOT NULL,
  connected_account_id text NOT NULL,
  registration_id uuid,
  amount numeric NOT NULL,
  platform_fee numeric,
  currency text NOT NULL,
  status text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT connected_account_payments_pkey PRIMARY KEY (id),
  CONSTRAINT connected_account_payments_registration_id_fkey FOREIGN KEY (registration_id) REFERENCES public.registrations(registration_id)
);
CREATE TABLE public.contacts (
  contact_id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text,
  first_name text NOT NULL,
  last_name text NOT NULL,
  suffix_1 text,
  suffix_2 text,
  suffix_3 text,
  contact_preference text,
  mobile_number text,
  email text NOT NULL,
  address_line_1 text,
  address_line_2 text,
  suburb_city text,
  state text,
  country text,
  postcode text,
  dietary_requirements text,
  special_needs text,
  type USER-DEFINED NOT NULL,
  has_partner boolean DEFAULT false,
  is_partner boolean DEFAULT false,
  organisation_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  auth_user_id uuid,
  billing_organisation_name character varying,
  billing_email character varying,
  billing_phone character varying,
  billing_street_address character varying,
  billing_city character varying,
  billing_state character varying,
  billing_postal_code character varying,
  billing_country character varying,
  stripe_customer_id character varying,
  business_name text,
  source_type text,
  source_id uuid,
  CONSTRAINT contacts_pkey PRIMARY KEY (contact_id),
  CONSTRAINT contacts_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(organisation_id)
);
CREATE TABLE public.customers (
  customer_id uuid NOT NULL,
  organisation_id uuid,
  first_name text,
  last_name text,
  business_name text,
  email text,
  phone text,
  billing_organisation_name character varying,
  billing_email character varying,
  billing_phone character varying,
  billing_street_address character varying,
  billing_city character varying,
  billing_state character varying,
  billing_postal_code character varying,
  billing_country character varying,
  address_line1 text,
  address_line2 text,
  city text,
  state text,
  postal_code text,
  country text,
  stripe_customer_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  contact_id uuid,
  customer_type USER-DEFINED,
  CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
  CONSTRAINT customers_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(contact_id)
);
CREATE TABLE public.display_scopes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT display_scopes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.eligibility_criteria (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  criteria text NOT NULL UNIQUE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  type text,
  CONSTRAINT eligibility_criteria_pkey PRIMARY KEY (id)
);
CREATE TABLE public.event_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  price numeric NOT NULL,
  total_capacity integer,
  available_count integer,
  reserved_count integer DEFAULT 0,
  sold_count integer DEFAULT 0,
  status character varying DEFAULT 'Active'::character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  eligibility_criteria jsonb DEFAULT '{"rules": []}'::jsonb,
  stripe_price_id text,
  CONSTRAINT event_tickets_pkey PRIMARY KEY (id),
  CONSTRAINT event_tickets_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(event_id)
);
CREATE TABLE public.events (
  title text NOT NULL,
  description text,
  type text,
  is_purchasable_individually boolean DEFAULT true,
  max_attendees bigint,
  featured boolean DEFAULT false,
  image_url text,
  event_includes ARRAY,
  important_information ARRAY,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  is_multi_day boolean DEFAULT false,
  event_id uuid NOT NULL DEFAULT gen_random_uuid() UNIQUE,
  parent_event_id uuid,
  registration_availability_id uuid,
  display_scope_id uuid,
  slug text NOT NULL UNIQUE,
  event_start timestamp with time zone,
  event_end timestamp with time zone,
  location_id uuid,
  subtitle text,
  is_published boolean DEFAULT true,
  regalia text,
  regalia_description text,
  dress_code text,
  degree_type text,
  sections jsonb,
  attendance jsonb,
  documents jsonb,
  related_events ARRAY,
  organiser_id uuid,
  reserved_count integer NOT NULL DEFAULT 0 CHECK (reserved_count >= 0),
  sold_count integer NOT NULL DEFAULT 0 CHECK (sold_count >= 0),
  stripe_product_id text,
  CONSTRAINT events_pkey PRIMARY KEY (event_id),
  CONSTRAINT events_organiser_id_fkey FOREIGN KEY (organiser_id) REFERENCES public.organisations(organisation_id),
  CONSTRAINT events_display_scope_id_fkey FOREIGN KEY (display_scope_id) REFERENCES public.display_scopes(id),
  CONSTRAINT events_registration_availability_id_fkey FOREIGN KEY (registration_availability_id) REFERENCES public.eligibility_criteria(id),
  CONSTRAINT events_parent_event_id_fkey FOREIGN KEY (parent_event_id) REFERENCES public.events(event_id),
  CONSTRAINT events_locationid_fkey FOREIGN KEY (location_id) REFERENCES public.locations(location_id)
);
CREATE TABLE public.grand_lodges (
  name text NOT NULL,
  country text,
  abbreviation text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  grand_lodge_id uuid NOT NULL DEFAULT gen_random_uuid() UNIQUE,
  country_code_iso3 text,
  state_region text,
  state_region_code text,
  organisation_id uuid,
  CONSTRAINT grand_lodges_pkey PRIMARY KEY (grand_lodge_id),
  CONSTRAINT grand_lodges_organisationid_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(organisation_id)
);
CREATE TABLE public.locations (
  location_id uuid NOT NULL DEFAULT gen_random_uuid(),
  room_or_area character varying,
  place_name character varying NOT NULL,
  street_address character varying,
  suburb character varying,
  state character varying,
  postal_code character varying,
  country character varying,
  latitude numeric,
  longitude numeric,
  capacity integer,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT locations_pkey PRIMARY KEY (location_id)
);
CREATE TABLE public.lodges (
  lodge_id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  number numeric,
  display_name text,
  district text,
  meeting_place text,
  area_type text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  grand_lodge_id uuid,
  state_region text,
  organisation_id uuid,
  CONSTRAINT lodges_pkey PRIMARY KEY (lodge_id),
  CONSTRAINT lodges_grand_lodge_id_fkey FOREIGN KEY (grand_lodge_id) REFERENCES public.grand_lodges(grand_lodge_id),
  CONSTRAINT lodges_organisationid_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(organisation_id)
);
CREATE TABLE public.masonic_profiles (
  masonic_profile_id uuid NOT NULL DEFAULT gen_random_uuid(),
  masonic_title character varying,
  rank character varying,
  grand_rank character varying,
  grand_officer character varying,
  grand_office character varying,
  lodge_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  grand_lodge_id uuid,
  contact_id uuid UNIQUE,
  CONSTRAINT masonic_profiles_pkey PRIMARY KEY (masonic_profile_id),
  CONSTRAINT masonic_profiles_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(contact_id),
  CONSTRAINT masonic_profiles_lodge_id_fkey FOREIGN KEY (lodge_id) REFERENCES public.organisations(organisation_id),
  CONSTRAINT masonic_profiles_grand_lodge_id_fkey FOREIGN KEY (grand_lodge_id) REFERENCES public.organisations(organisation_id)
);
CREATE TABLE public.memberships (
  membership_id uuid NOT NULL DEFAULT gen_random_uuid(),
  contact_id uuid NOT NULL,
  profile_id uuid,
  role character varying DEFAULT 'member'::character varying,
  permissions ARRAY DEFAULT ARRAY['read'::text, 'update_own_data'::text],
  membership_type character varying NOT NULL,
  membership_entity_id uuid NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT memberships_pkey PRIMARY KEY (membership_id),
  CONSTRAINT memberships_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(contact_id),
  CONSTRAINT memberships_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.masonic_profiles(masonic_profile_id)
);
CREATE TABLE public.organisation_payouts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  payout_id text NOT NULL UNIQUE,
  organisation_stripe_id text NOT NULL,
  amount numeric NOT NULL,
  currency text NOT NULL,
  status text NOT NULL,
  arrival_date timestamp with time zone NOT NULL,
  method text,
  description text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT organisation_payouts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.organisations (
  organisation_id uuid NOT NULL DEFAULT gen_random_uuid() UNIQUE,
  name character varying NOT NULL,
  type USER-DEFINED NOT NULL,
  street_address character varying,
  city character varying,
  state character varying,
  postal_code character varying,
  country character varying,
  website character varying,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  known_as text,
  abbreviation text,
  stripe_onbehalfof text,
  stripe_account_status text DEFAULT 'pending'::text,
  stripe_payouts_enabled boolean DEFAULT false,
  stripe_details_submitted boolean DEFAULT false,
  stripe_capabilities jsonb,
  CONSTRAINT organisations_pkey PRIMARY KEY (organisation_id)
);
CREATE TABLE public.packages (
  package_id uuid NOT NULL DEFAULT gen_random_uuid(),
  parent_event_id uuid,
  event_id uuid,
  name text NOT NULL,
  description text,
  original_price numeric,
  discount numeric DEFAULT 0,
  package_price numeric NOT NULL,
  is_active boolean DEFAULT true,
  includes_description ARRAY,
  qty integer DEFAULT 1,
  included_items ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  eligibility_criteria jsonb DEFAULT '{"rules": []}'::jsonb,
  CONSTRAINT packages_pkey PRIMARY KEY (package_id),
  CONSTRAINT packages_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.events(event_id),
  CONSTRAINT packages_parent_event_id_fkey1 FOREIGN KEY (parent_event_id) REFERENCES public.events(event_id)
);
CREATE TABLE public.platform_transfers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  transfer_id text NOT NULL UNIQUE,
  source_transaction text,
  destination_account text NOT NULL,
  amount numeric NOT NULL,
  currency text NOT NULL,
  description text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT platform_transfers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.registrations (
  registration_id uuid NOT NULL,
  contact_id uuid,
  event_id uuid,
  registration_date timestamp with time zone,
  status character varying,
  total_amount_paid numeric,
  total_price_paid numeric,
  payment_status USER-DEFINED DEFAULT 'pending'::payment_status,
  agree_to_terms boolean DEFAULT false,
  stripe_payment_intent_id text,
  primary_attendee_id uuid,
  registration_type USER-DEFINED,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  registration_data jsonb,
  confirmation_number text,
  organisation_id uuid,
  connected_account_id text,
  platform_fee_amount numeric,
  platform_fee_id text,
  confirmation_pdf_url text,
  subtotal numeric,
  stripe_fee numeric,
  includes_processing_fee boolean DEFAULT false,
  CONSTRAINT registrations_pkey PRIMARY KEY (registration_id),
  CONSTRAINT registrations_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(organisation_id),
  CONSTRAINT registrations_customer_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contacts(contact_id)
);
CREATE TABLE public.tickets (
  ticket_id uuid NOT NULL DEFAULT gen_random_uuid(),
  attendee_id uuid,
  event_id uuid NOT NULL,
  price_paid numeric NOT NULL,
  seat_info character varying,
  status character varying NOT NULL DEFAULT 'Active'::character varying CHECK (status::text = ANY (ARRAY['available'::character varying, 'reserved'::character varying, 'sold'::character varying, 'used'::character varying, 'cancelled'::character varying]::text[])),
  checked_in_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  reservation_id uuid,
  reservation_expires_at timestamp with time zone,
  original_price numeric,
  currency character varying DEFAULT 'AUD'::character varying,
  payment_status character varying DEFAULT 'Unpaid'::character varying,
  purchased_at timestamp with time zone,
  package_id uuid,
  id uuid,
  registration_id uuid,
  ticket_type_id uuid,
  ticket_price numeric,
  ticket_status character varying,
  is_partner_ticket boolean DEFAULT false,
  qr_code_url text,
  CONSTRAINT tickets_pkey PRIMARY KEY (ticket_id),
  CONSTRAINT tickets_eventid_fkey FOREIGN KEY (event_id) REFERENCES public.events(event_id),
  CONSTRAINT tickets_attendeeid_fkey FOREIGN KEY (attendee_id) REFERENCES public.attendees(attendee_id),
  CONSTRAINT tickets_ticket_type_id_fkey FOREIGN KEY (ticket_type_id) REFERENCES public.event_tickets(id),
  CONSTRAINT tickets_package_id_fkey FOREIGN KEY (package_id) REFERENCES public.packages(package_id),
  CONSTRAINT tickets_registration_id_fkey FOREIGN KEY (registration_id) REFERENCES public.registrations(registration_id)
);
CREATE TABLE public.user_roles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  role character varying NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_roles_pkey PRIMARY KEY (id),
  CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);