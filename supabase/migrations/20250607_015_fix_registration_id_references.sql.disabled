-- Fix incorrect field references in should_generate_confirmation function
-- The registrations table uses registration_id, not id

-- Drop existing trigger first
DROP TRIGGER IF EXISTS registration_confirmation_trigger ON registrations;

-- Update the function to use correct field names and webhook_logs schema
CREATE OR REPLACE FUNCTION should_generate_confirmation()
RETURNS TRIGGER AS $$
DECLARE
  v_webhook_log_id uuid;
BEGIN
  -- Only proceed if this is a payment completion (both status fields set to completed)
  IF NEW.status = 'completed' AND NEW.payment_status = 'completed' AND 
     (OLD.status IS DISTINCT FROM 'completed' OR OLD.payment_status IS DISTINCT FROM 'completed') THEN
    
    -- Insert into webhook_logs using the correct schema
    INSERT INTO webhook_logs (
      webhook_name,
      table_name,
      record_id,
      event_type,
      payload
    ) VALUES (
      'generate-confirmation',
      'registrations',
      NEW.registration_id::text,  -- Fixed: was NEW.id::text
      'payment_completed',
      jsonb_build_object(
        'registration_id', NEW.registration_id,  -- Fixed: was NEW.id
        'registration_type', NEW.registration_type,
        'function_id', NEW.function_id,
        'payment_status', NEW.payment_status,
        'status', NEW.status,
        'trigger', 'payment_completion'
      )
    ) RETURNING id INTO v_webhook_log_id;
    
    -- Call the Edge Function
    PERFORM
      net.http_post(
        url := current_setting('app.settings.supabase_url') || '/functions/v1/generate-confirmation',
        headers := jsonb_build_object(
          'Content-Type', 'application/json',
          'Authorization', 'Bearer ' || current_setting('app.settings.supabase_service_role_key')
        ),
        body := jsonb_build_object(
          'registration_id', NEW.registration_id,
          'registration_type', NEW.registration_type,
          'webhook_log_id', v_webhook_log_id
        )
      );
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Recreate the trigger
CREATE TRIGGER registration_confirmation_trigger
  AFTER UPDATE ON registrations
  FOR EACH ROW
  EXECUTE FUNCTION should_generate_confirmation();

-- Add comment for documentation
COMMENT ON FUNCTION should_generate_confirmation() IS 'Triggers confirmation number generation when a registration payment is completed. Fixed to use correct registration_id field and webhook_logs schema.';