/**
 * Represents an event, combining database fields with frontend-specific formatted fields.
 */
export interface EventType {
  // --- Core Database Fields (Raw ISO Strings from DB) ---
  id: string;                      // UUID, Primary Key
  slug: string;                    // URL-friendly identifier
  eventStart: string;              // ISO String from DB timestamptz
  eventEnd: string | null;         // ISO String from DB timestamptz (or null)

  // --- Other Database Fields ---
  title: string | null;
  description: string | null;
  location: string | null;
  type: string | null;             // Event category (e.g., 'Ceremony', 'Social')
  // price and maxAttendees removed from database schema
  // Pricing now comes from ticket_definitions table
  // Capacity now handled separately
  featured: boolean | null;        // Featured on homepage/listings
  imageUrl: string | null;         // URL for the event image

  // --- Additional Database Fields ---
  isMultiDay: boolean | null;              // If the event spans multiple days
  parentEventId: string | null;            // Foreign key to self (for sub-events)
  eventIncludes: string[] | null;          // List of items included
  importantInformation: string[] | null;   // List of important notes
  latitude: number | null;                 // For mapping
  longitude: number | null;                // For mapping
  isPurchasableIndividually: boolean | null; // Can this event be bought outside a package?
  createdAt: string;                       // Timestamp
  
  // --- Event Details ---
  dressCode?: string | null;               // Dress code requirement
  regalia?: string | null;                 // Regalia requirement
  category?: string | null;                // Event category
  status?: string;                         // Publication status
  organiserName?: string | null;           // Event organiser name

  // --- Deprecated Raw Fields (Commented Out) ---
  // date?: string | null;          // Use eventStart
  // start_time?: string | null;    // Use eventStart
  // end_time?: string | null;      // Use eventEnd
  // end_date?: string | null;      // Use eventEnd

  // --- Frontend-Specific Formatted Fields (Derived by formatEventForDisplay) ---
  day?: string;                     // e.g., "Sunday, 27 April 25"
  date?: string;                    // e.g., "27-04-2025"
  time?: string;                    // e.g., "06:00 PM"
  until?: string;                   // ADDED: e.g., "09:00 PM"
  imageSrc?: string;                // Optional alias for imageUrl
  
  // --- Potentially Redundant Formatted Fields (Check Usage) ---
  // These might be derivable from event_start/event_end now
  startTimeFormatted?: string;      // e.g., "19:00"
  endTimeFormatted?: string;        // e.g., "21:00"
  
  // --- Pricing Information ---
  minPrice?: number | null;         // Minimum ticket price for the event (from ticket_definitions)
  price?: string | null;            // Formatted price string for display (e.g., "From $20" or "$0")
}

// Note: These fields are generated by frontend formatters from eventStart and eventEnd
// These are not stored in the database but are calculated at runtime for display purposes.

/**
 * Represents the summarized data for a specific day used in the overview section.
 */
export interface EventDayOverviewType {
  id: string;
  date: string; // YYYY-MM-DD  
  name: string; // Day title/theme
  featuredEventsSummary?: string | null; // Pre-formatted summary string
}