# Form Patterns

## Progressive Form Pattern
```typescript
// CORRECT: Progressive enhancement
export async function ContactForm() {
  return (
    <form action={submitForm}>
      <input name="email" type="email" required />
      <button type="submit">Submit</button>
      <ClientEnhancements />
    </form>
  )
}

// Client enhancements
'use client'
function ClientEnhancements() {
  return <ValidationFeedback />
}
```

## Server Actions
```typescript
async function submitForm(formData: FormData) {
  'use server'
  
  // Validate
  const parsed = schema.safeParse({
    email: formData.get('email'),
  })
  
  if (!parsed.success) {
    return { error: parsed.error }
  }
  
  // Process
  await saveToDatabase(parsed.data)
  
  // Redirect
  redirect('/success')
}
```

## Validation Rules
- Server-side validation is mandatory
- Client-side validation enhances UX
- Use Zod for schema validation
- Return actionable error messages